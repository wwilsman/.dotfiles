#!/usr/bin/env bash

IFS=':' read -ra INPUT <<< "$1"

FRAME=($(jq -c <<< "
  {
    \"display\": $(yabai -m query --displays --display),
    \"window\": $(yabai -m query --windows --window),
    \"top_padding\": $(yabai -m config top_padding),
    \"bottom_padding\": $(yabai -m config bottom_padding),
    \"left_padding\": $(yabai -m config left_padding),
    \"right_padding\": $(yabai -m config right_padding),
    \"window_gap\": $(yabai -m config window_gap),
    \"menubar_height\": 22,
    \"input\": {
      \"r\": ${INPUT[0]/-/false},
      \"c\": ${INPUT[1]/-/false},
      \"x\": ${INPUT[2]},
      \"y\": ${INPUT[3]},
      \"w\": ${INPUT[4]},
      \"h\": ${INPUT[5]}
    }
  }
" '
  .input as $in |
  .window.frame as $win |
  {
    x: (.display.frame.x + .left_padding),
    y: (.display.frame.y + .top_padding + .menubar_height),
    w: (.display.frame.w - .left_padding - .right_padding),
    h: (.display.frame.h - .top_padding - .bottom_padding - .menubar_height)
  } as $bounds |
  {
    w: (if $in.c then ($bounds.w / $in.c) else 0 end),
    h: (if $in.r then ($bounds.h / $in.r) else 0 end),
    g: (.window_gap / 2)
  } as $cell |
  (if $in.c then (
    $win.w / $bounds.w * $in.c | round | . + $in.w | . * $cell.w |
    [., $bounds.w] | min | [., $cell.w] | max |
    if . < $bounds.w then . - $cell.g else . end
  ) else $win.w end) as $w |
  (if $in.r then (
    $win.h / $bounds.h * $in.r | round | . + $in.h | . * $cell.h |
    [., $bounds.h] | min | [., $cell.h] | max |
    if . < $bounds.h then . - $cell.g else . end
  ) else $win.h end) as $h |
  (if $in.c then (
    $win.x / $bounds.w * $in.c | round | . + $in.x | . * $cell.w |
    [., $bounds.w - $w] | min | [., 0] | max | . + $bounds.x |
    if . > $bounds.x then . + $cell.g else . end
  ) else $win.x end) as $x |
  (if $in.r then (
    $win.y / $bounds.h * $in.r | round | . + $in.y | . * $cell.h |
    [., $bounds.h - $h] | min | [., 0] | max | . + $bounds.y |
    if . > $bounds.y then . + $cell.g else . end
  ) else $win.y end) as $y |
  $x, $y, $w, $h
'))

# printf "%s:" ${FRAME[@]}
yabai -m window --move abs:${FRAME[0]}:${FRAME[1]} && \
yabai -m window --resize abs:${FRAME[2]}:${FRAME[3]}
